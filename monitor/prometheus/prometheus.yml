# my global config
global:
  scrape_interval:     15s # Set the scrape interval to every 15 seconds. Default is every 1 minute.
  evaluation_interval: 15s # Evaluate rules every 15 seconds. The default is every 1 minute.
  # scrape_timeout is set to the global default (10s).

# Alertmanager configuration
alerting:
  alertmanagers:
    - static_configs:
        - targets: ['192.168.0.101:9093']

# Load rules once and periodically evaluate them according to the global 'evaluation_interval'.
rule_files:
# - "first_rules.yml"
# - "second_rules.yml"

# 抓取对象配置
# A scrape configuration containing exactly one endpoint to scrape:
# Here it's Prometheus itself.
scrape_configs:
  # 在这个配置内的时间序列，每一条会加上job=prometheus标签
  # The job name is added as a label `job=<job_name>` to any timeseries scraped from this config.

  # 监控prometheus
  - job_name: 'prometheus'
    # 覆盖global的抓取间隔时间，拉取时间间隔重写5s
    scrape_interval: 5s

    # metrics_path defaults to '/metrics'
    # scheme defaults to 'http'.
    static_configs:
      - targets: ['192.168.0.101:9090']

  # 机器监控
  - job_name: 'node'
    scrape_interval: 5s
    static_configs:
      - targets: ['192.168.0.101:9100']

  # 容器监控
  - job_name: 'cadvisor'
    scrape_interval: 5s
    static_configs:
      - targets: ['192.168.0.101:8080']

  # mysql监控
  - job_name: 'mysql'
    scrape_interval: 5s
    static_configs:
      - targets: ['192.168.0.101:9104']

  # spring cloud监控
  - job_name: 'spring-actuator'
    metrics_path: '/actuator/prometheus'
    scrape_interval: 5s
    static_configs:
      - targets: ['192.168.0.101:8501','192.168.0.101:8503']
